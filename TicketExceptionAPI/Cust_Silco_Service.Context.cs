//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketExceptionAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Cust_Silco_ServiceEntities : DbContext
    {
        public Cust_Silco_ServiceEntities()
            : base("name=Cust_Silco_ServiceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("Cust_Silco_ServiceEntities", "CheckMultipleResolutionNotes")]
        public virtual IQueryable<CheckMultipleResolutionNotes_Result> CheckMultipleResolutionNotes(Nullable<int> serviceticketid)
        {
            var serviceticketidParameter = serviceticketid.HasValue ?
                new ObjectParameter("serviceticketid", serviceticketid) :
                new ObjectParameter("serviceticketid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CheckMultipleResolutionNotes_Result>("[Cust_Silco_ServiceEntities].[CheckMultipleResolutionNotes](@serviceticketid)", serviceticketidParameter);
        }
    
        public virtual ObjectResult<SelectTicketsAcceptedandResolvedPostingStatus_Result> SelectTicketsAcceptedandResolvedPostingStatus(Nullable<int> serviceticketid)
        {
            var serviceticketidParameter = serviceticketid.HasValue ?
                new ObjectParameter("serviceticketid", serviceticketid) :
                new ObjectParameter("serviceticketid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectTicketsAcceptedandResolvedPostingStatus_Result>("SelectTicketsAcceptedandResolvedPostingStatus", serviceticketidParameter);
        }
    }
}
